@model IMS.Models.PagedUsersViewModel;
@{
    ViewData["Title"] = "Expenses Types";
    bool isAdmin = Convert.ToBoolean(User.FindFirst("IsAdmin")?.Value);
    string role = isAdmin ? "Admin" : "User";
}
<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h2 class="mb-0" style="text-align:center">Users</h2>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <a asp-action="Create" class="btn btn-success">Create New User</a>
            <form asp-action="GetAllUsers" asp-controller="User" asp-route-searchUsername="@ViewData["searchUsername"]" method="get" class="d-flex align-items-center gap-2">
                <input type="text"
                       name="searchUsername"
                       value="@Context.Request.Query["searchUsername"]"
                       class="form-control"
                       placeholder="Enter user name" onchange="SearchNameChange" />
                <button type="submit" class="btn btn-primary">
                    <i class="fa-solid fa-magnifying-glass"></i>
                </button>

            </form>


            
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-bordered custom-table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Users[0].UserName)</th>
                        <th>@Html.DisplayNameFor(model => model.Users[0].UserPassword)</th>
                        <th>@Html.DisplayNameFor(model => model.Users[0].IsEnabled)</th>
                        <th>@Html.DisplayNameFor(model => model.Users[0].IsAdmin)</th>

                        <th>Actions</th>


                    </tr>
                </thead>
                <tbody>
                    @if (Model.Users.Any())
                    {
                        @foreach (var item in Model.Users)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                <td>
                                    @Html.DisplayFor(modelitem => item.UserPassword)
                                    @*  <span class="password-text" style="display:none;">@item.UserPassword</span>
                                    <span class="password-mask">••••••</span>
                                    <i class="bi bi-eye toggle-password" style="cursor:pointer;"></i> *@
                                </td>

                                <td>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input @(item.IsEnabled ? "bg-success" : "bg-danger")"
                                               type="checkbox"
                                               @(item.IsEnabled ? "checked" : "")
                                               disabled>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input @(item.IsAdmin ? "bg-success" : "bg-danger")"
                                               type="checkbox"
                                               @(item.IsAdmin ? "checked" : "")
                                               disabled>
                                    </div>
                                </td>

                                <td class="table-actions">
                                    <a class="btn btn-primary btn-sm" asp-action="Edit" asp-route-id="@item.UserId">Edit</a>
                                    <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.UserId">Delete</a>
                                </td>


                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center">No users found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-between align-items-center mt-3">
            <span class="text-muted">Total Items : @Model.TotalCount | Showing @Model.PageSize Items per page</span>
            <div class="end-0">
                <label for="pageSize" class="form-label me-2 text-muted">Items Per Page :</label>
                <select id="pageSize" class="form-select form-select-sm d-inline-block w-auto" onchange="changePageSize(this)">
                    <option value="5" selected="@(Model.PageSize == 5)">5</option>
                    <option value="10" selected="@(Model.PageSize == 10)">10</option>
                    <option value="25" selected="@(Model.PageSize == 25)">25</option>
                </select>
            </div>
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="User pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" asp-action="GetAllUsers" asp-route-pageNumber="1"
                               asp-route-pageSize="@Model.PageSize" asp-route-searchUsername="@ViewData["searchUsername"]">First</a>
                        </li>
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" asp-action="GetAllUsers" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize"
                               asp-route-searchUsername="@ViewData["searchUsername"]">Previous</a>
                        </li>
                        @{
                            int startPage = Math.Max(1, Model.CurrentPage - 1);
                            int endPage = Math.Min(Model.TotalPages, startPage + 2);
                            if (endPage - startPage < 2)
                            {
                                startPage = Math.Max(1, endPage - 2);
                            }

                        }
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="GetAllUsers" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-searchUsername="@ViewData["searchUsername"]">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" asp-action="GetAllUsers" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchUsername="@ViewData["searchUsername"]">Next</a>
                        </li>
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" asp-action="GetAllUsers" asp-route-pageNumber="@Model.TotalPages" asp-route-pageSize="@Model.PageSize" asp-route-searchUsername="@ViewData["searchUsername"]">Last</a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // function changePageSize(select) {
        //     window.location.href = '@Url.Action("GetAllUsers", "User")?pageNumber=1&pageSize=' + select.value;
        // }

        function SearchNameChange(){
            debugger;

            const search = document.querySelector('input[name="searchUsername"]').value;
            window.location.href = '@Url.Action("GetAllUsers", "User")'
                + '?pageNumber=1&pageSize=' + select.value
                + (search ? '&searchUsername=' + encodeURIComponent(search) : '');
        }


           function changePageSize(select) {
               debugger;
            const search = document.querySelector('input[name="searchUsername"]').value;
            window.location.href = '@Url.Action("GetAllUsers", "User")'
                + '?pageNumber=1&pageSize=' + select.value
                + (search ? '&searchUsername=' + encodeURIComponent(search) : '');
        }


    </script>
}