@using IMS.DAL.PrimaryDBContext
@model AdminExpenseType;

<div class="card shadow-sm">
                <div class="card-header bg-primary text-white py-3">
                    <div class="d-flex align-items-center">
                        <i class="fa fa-plus-circle me-2"></i>
                        <h4 class="mb-0">Create Expense Type</h4>
                    </div>
                </div>
                <div class="card-body p-4">
                    <form asp-action="CreateExpenseType" id="expenseTypeForm" novalidate>
                        <div class="mb-3">
                            <label asp-for="ExpenseTypeName" class="form-label fw-semibold">
                                <i class="fa fa-tag me-1"></i>@Html.DisplayNameFor(m => m.ExpenseTypeName)
                                <span class="text-danger">*</span>
                            </label>
                            <input asp-for="ExpenseTypeName" class="form-control form-control-lg" 
                                   placeholder="Enter expense type name" 
                                   required />
                            <span asp-validation-for="ExpenseTypeName" class="text-danger small"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="ExpenseTypeDescription" class="form-label fw-semibold">
                                <i class="fa fa-align-left me-1"></i>@Html.DisplayNameFor(m => m.ExpenseTypeDescription)
                            </label>
                            <textarea asp-for="ExpenseTypeDescription" class="form-control" 
                                      rows="3" 
                                      placeholder="Enter description (optional)"></textarea>
                            <span asp-validation-for="ExpenseTypeDescription" class="text-danger small"></span>
                        </div>
                        
                        <div class="mb-4">
                            <div class="form-check form-switch">
                                <input type="checkbox" asp-for="IsEnabled" class="form-check-input" id="isEnabledSwitch" />
                                <label asp-for="IsEnabled" class="form-check-label fw-semibold" for="isEnabledSwitch">
                                    <i class="fa fa-toggle-on me-1"></i>@Html.DisplayNameFor(m => m.IsEnabled)
                                </label>
                            </div>
                            <span asp-validation-for="IsEnabled" class="text-danger small"></span>
                        </div>
                       
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="GetAllExpenseTypes" class="btn btn-outline-secondary btn-lg me-md-2">
                                <i class="fa fa-times me-1"></i>Cancel
                            </a>
                            <button type="submit" class="btn btn-success btn-lg">
                                <i class="fa fa-save me-1"></i>Create Expense Type
                            </button>
                        </div>
                    </form>
                </div>
            </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Enhanced form validation with toast notifications
            $('#expenseTypeForm').on('submit', function(e) {
                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    // Show validation errors
                    var firstError = $(this).find('.is-invalid').first();
                    if (firstError.length) {
                        firstError.focus();
                        showToast('Please fill in all required fields correctly.', 'error');
                    } else {
                        showToast('Please check the form for errors.', 'error');
                    }
                }
                $(this).addClass('was-validated');
            });

            // Real-time validation
            $('input[required], textarea[required]').on('blur', function() {
                if (!this.checkValidity()) {
                    $(this).addClass('is-invalid');
                    showToast('This field is required.', 'error');
                } else {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                }
            });

            // Clear validation on input
            $('input, textarea').on('input', function() {
                $(this).removeClass('is-invalid is-valid');
            });
        });

        function showToast(message, type) {
            // Create toast element
            var toastHtml = `
                <div class="toast align-items-center text-white bg-${type === 'error' ? 'danger' : 'success'} border-0 show" 
                     role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="4000">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="fa fa-${type === 'error' ? 'exclamation-triangle' : 'check-circle'} me-2"></i>${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;
            
            // Add to toast container
            $('.toast-container').append(toastHtml);
            
            // Auto remove after 4 seconds
            setTimeout(function() {
                $('.toast-container .toast').last().remove();
            }, 4000);
        }
    </script>
}