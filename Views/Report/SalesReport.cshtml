@model IMS.Models.ReportsViewModel;
@{
    bool isAdmin = Convert.ToBoolean(User.FindFirst("IsAdmin")?.Value);
    string role = isAdmin ? "Admin" : "User";
}
@* <div class="container mt-4"> *@
<div class="card shadow-sm">
    <div class="card-header bg-primary text-white py-3">
        <div class="d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center">
                <i class="fa fa-chart-line me-2"></i>
                <h4 class="mb-0">Sales Report</h4>
            </div>
            <div class="d-flex gap-2">
                <a href="#" id="exportExcelBtn" class="btn btn-warning btn-sm">
                    <i class="fa fa-file-excel text-success me-1"></i> Export Excel
                </a>
                <a href="#" id="exportPdfBtn" class="btn btn-warning btn-sm">
                    <i class="fa fa-file-pdf text-danger me-1"></i> Export PDF
                </a>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <!-- Enhanced Filter Section -->
        <div class="card mb-4">
            <div class="card-header bg-light">
                <h5 class="mb-0">
                    <i class="fa fa-filter me-2 text-primary"></i>Filter Options
                </h5>
            </div>
            <div class="card-body">
                <form id="filterForm" asp-action="SalesReport" asp-controller="Report" method="get">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">
                                <i class="fa fa-user me-1 text-primary"></i>Customer
                            </label>
                            @Html.DropDownList("SalesReportsFilters.CustomerIdFk", ViewBag.Customers as IEnumerable<SelectListItem>, 
                                "-- Select Customer --", 
                                new { @class = "form-control", @id = "customerComboBox" })
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">
                                <i class="fa fa-calendar me-1 text-primary"></i>From Date
                            </label>
                            <input type="date" name="FromDate"
                                   value="@(string.IsNullOrEmpty(Context.Request.Query["FromDate"]) ? DateTime.Now.ToString("yyyy-MM-dd") : Context.Request.Query["FromDate"].ToString())"
                                   class="form-control" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">
                                <i class="fa fa-calendar me-1 text-primary"></i>To Date
                            </label>
                            <input type="date" name="ToDate"
                                   value="@(string.IsNullOrEmpty(Context.Request.Query["ToDate"]) ? DateTime.Now.ToString("yyyy-MM-dd") : Context.Request.Query["ToDate"].ToString())"
                                   class="form-control" />
                        </div>
                        <div class="col-md-3 d-flex align-items-end">
                            <div class="d-flex gap-2 w-100">
                                <button type="submit" class="btn btn-primary flex-fill">
                                    <i class="fa fa-search me-1"></i> Search
                                </button>
                                <a asp-action="SalesReport" class="btn btn-outline-secondary flex-fill">
                                    <i class="fa fa-refresh me-1"></i> Refresh
                                </a>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <!-- Enhanced Table Section -->
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fa fa-table me-2"></i>Sales Report Data
                </h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive" id="printArea">
                    <table id="salesTable" class="table table-hover table-striped mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th><i class="fa fa-hashtag me-1"></i>Sale ID</th>
                                <th><i class="fa fa-user me-1"></i>Customer Name</th>
                                <th><i class="fa fa-file-text me-1"></i>Bill #</th>
                                <th><i class="fa fa-calendar me-1"></i>Sale Date</th>
                                <th><i class="fa fa-dollar-sign me-1"></i>Total Amount</th>
                                <th><i class="fa fa-percent me-1"></i>Discount</th>
                                <th><i class="fa fa-credit-card me-1"></i>Paid Amount</th>
                                <th><i class="fa fa-calculator me-1"></i>Total Payable</th>
                                <th><i class="fa fa-comment me-1"></i>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.SalesList.Any())
                            {
                                @foreach (var item in Model.SalesList)
                                {
                                    <tr>
                                        <td><span class="badge bg-primary">@Html.DisplayFor(modelItem => item.SaleId)</span></td>
                                        <td>@Html.DisplayFor(modelitem => item.CustomerName)</td>
                                        <td><code>@Html.DisplayFor(modelitem => item.BillNumber)</code></td>
                                        <td>@item.SaleDate.ToString("dd/MM/yyyy")</td>
                                        <td><strong class="text-success">@Html.DisplayFor(modelitem => item.TotalAmount)</strong></td>
                                        <td><span class="text-warning">@Html.DisplayFor(modelItem => item.DiscountAmount)</span></td>
                                        <td><span class="text-info">@Html.DisplayFor(modelItem => item.TotalReceivedAmount)</span></td>
                                        <td><strong class="text-primary">@Html.DisplayFor(modelItem => item.TotalDueAmount)</strong></td>
                                        <td>@Html.DisplayFor(modelItem => item.SaleDescription)</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="9" class="text-center py-4">
                                        <div class="d-flex flex-column align-items-center">
                                            <i class="fa fa-inbox fa-3x text-muted mb-3"></i>
                                            <h5 class="text-muted">No Sales Data Found</h5>
                                            <p class="text-muted">Try adjusting your filter criteria to see more results.</p>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- Enhanced Pagination Section -->
        <div class="card mt-4">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                    <div class="d-flex align-items-center">
                        <i class="fa fa-info-circle me-2 text-primary"></i>
                        <span class="text-muted">
                            <strong>@Model.TotalCount</strong> total items | Showing <strong>@Model.PageSize</strong> items per page
                        </span>
                    </div>
                    <div class="d-flex align-items-center gap-3">
                        <label for="pageSize" class="form-label mb-0 text-muted">
                            <i class="fa fa-list me-1"></i>Items Per Page:
                        </label>
                        <select id="pageSize" class="form-select form-select-sm w-auto" onchange="changePageSize(this)">
                            <option value="10" selected="@(Model.PageSize == 10)">10</option>
                            <option value="20" selected="@(Model.PageSize == 20)">20</option>
                            <option value="30" selected="@(Model.PageSize == 30)">30</option>
                        </select>
                    </div>
                </div>
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Sales Report pagination" class="mt-3">
                        <ul class="pagination justify-content-center mb-0">
                            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                                <a class="page-link" asp-action="SalesReport" asp-route-pageNumber="1" asp-route-pageSize="@Model.PageSize">
                                    <i class="fa fa-angle-double-left me-1"></i>First
                                </a>
                            </li>
                            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                                <a class="page-link" asp-action="SalesReport" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize">
                                    <i class="fa fa-angle-left me-1"></i>Previous
                                </a>
                            </li>
                            @{
                                int startPage = Math.Max(1, Model.CurrentPage - 1);
                                int endPage = Math.Min(Model.TotalPages, startPage + 2);
                                if (endPage - startPage < 2)
                                {
                                    startPage = Math.Max(1, endPage - 2);
                                }
                            }
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="SalesReport" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                                <a class="page-link" asp-action="SalesReport" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize">
                                    Next<i class="fa fa-angle-right ms-1"></i>
                                </a>
                            </li>
                            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                                <a class="page-link" asp-action="SalesReport" asp-route-pageNumber="@Model.TotalPages" asp-route-pageSize="@Model.PageSize">
                                    Last<i class="fa fa-angle-double-right ms-1"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
        </div>
    </div>
    @*  </div> *@
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize Kendo UI ComboBox for Customer
            $("#customerComboBox").kendoComboBox({
                placeholder: "-- Select Customer --",
                filter: "contains",
                suggest: true,
                minLength: 1,
                dataTextField: "Text",
                dataValueField: "Value",
                change: function(e) {
                    console.log("Customer selection changed:", e.sender.value());
                },
                select: function(e) {
                    console.log("Customer selected:", e.item);
                }
            });
        });

        function SearchNameChange(){
            debugger;

            const search = document.querySelector('input[name="searchUsername"]').value;
            window.location.href = '@Url.Action("SalesReport", "Report")'
                + '?pageNumber=1&pageSize=' + select.value
                + (search ? '&searchUsername=' + encodeURIComponent(search) : '');
        }


           function changePageSize(select) {
              
            var custId = document.getElementById("customerComboBox").value;
            var fromDate = document.querySelector("input[name='FromDate']").value;
            var toDate = document.querySelector("input[name='ToDate']").value;

            var url = `/Report/SalesReport?pageNumber=1&custId=${custId}&pageSize=${select.value}&FromDate=${fromDate}&ToDate=${toDate}`;
            window.location.href = url;
            
        }


          
     


    </script>
    <script>
        document.getElementById("exportExcelBtn").addEventListener("click", function () {
            var custId = document.getElementById("customerComboBox").value;
            var fromDate = document.querySelector("input[name='FromDate']").value;
            var toDate = document.querySelector("input[name='ToDate']").value;

            var url = `/Report/ExportExcel?custId=${custId}&FromDate=${fromDate}&ToDate=${toDate}`;
            window.location.href = url;
        });

        document.getElementById("exportPdfBtn").addEventListener("click", function () {
            var custId = document.getElementById("customerComboBox").value;
            var fromDate = document.querySelector("input[name='FromDate']").value;
            var toDate = document.querySelector("input[name='ToDate']").value;

            var url = `/Report/ExportPdf?custId=${custId}&FromDate=${fromDate}&ToDate=${toDate}`;
            window.location.href = url;
        });

           

    </script>
}
