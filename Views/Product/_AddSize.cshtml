@model IMS.DAL.PrimaryDBContext.ProductRange

<div class="modal-header">
    <h5 class="modal-title">Add Size</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
</div>

<div class="modal-body">
    <form id="addSizeForm">
        <div class="mb-2">
            <label>Measuring Unit</label>
            <input id="measuringUnitDropdown" name="MeasuringUnitIdFk" style="width: 100%;" required />
        </div>
        <div class="mb-2">
            <label>Size From</label>
            <input name="RangeFrom" type="number" step="0.001" class="form-control" required />
        </div>
        <div class="mb-2">
            <label>Size To</label>
            <input name="RangeTo" type="number" step="0.001" class="form-control" required />
        </div>
        <div class="mb-2">
            <label>Unit Price</label>
            <input name="UnitPrice" type="number" step="0.001" class="form-control" required />
        </div>
    </form>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
    <button type="button" class="btn btn-primary" id="saveSizeBtn">Save</button>
</div>

<script>
    $(document).ready(function () {
        // Check if Kendo UI is loaded
        if (typeof kendo === 'undefined') {
            console.error('Kendo UI is not loaded. Please check script references.');
            return;
        }

        // Get measuringUnitTypeId from the parent page
        var measuringUnitTypeId = null;
        
        // Try to get from the main form
        if ($("#MeasuringUnitTypeId").length && $("#MeasuringUnitTypeId").data("kendoComboBox")) {
            measuringUnitTypeId = $("#MeasuringUnitTypeId").data("kendoComboBox").value();
        }
        
        // Initialize Measuring Unit ComboBox with search functionality
        $("#measuringUnitDropdown").kendoComboBox({
            dataSource: {
                transport: {
                    read: {
                        url: "/Product/GetMeasuringUnits",
                        data: { measuringUnitTypeId: measuringUnitTypeId },
                        dataType: "json"
                    }
                }
            },
            dataTextField: "text",
            dataValueField: "value",
            placeholder: "-- Select Measuring Unit --",
            filter: "contains",
            suggest: true,
            minLength: 1
        });
    });
</script>
