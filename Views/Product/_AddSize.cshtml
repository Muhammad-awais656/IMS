@model IMS.DAL.PrimaryDBContext.ProductRange

<div class="modal-header">
    <h5 class="modal-title">Add Size</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
</div>

<div class="modal-body">
    <form id="addSizeForm">
        <input type="hidden" id="preSelectedMutId" value="@ViewBag.MeasuringUnitTypeId" />
        <div class="mb-2">
            <label>Measuring Unit Type</label>
            <input id="modalMeasuringUnitTypeId" name="MeasuringUnitTypeId" style="width: 100%;" />
        </div>
        <div class="mb-2">
            <label>Measuring Unit</label>
            <input id="modalMeasuringUnitId" name="MeasuringUnitIdFk" style="width: 100%;" />
        </div>
        <div class="mb-2">
            <label>Size From</label>
            <input name="RangeFrom" type="number" step="0.01" class="form-control" required />
        </div>
        <div class="mb-2">
            <label>Size To</label>
            <input name="RangeTo" type="number" step="0.01" class="form-control" required />
        </div>
        <div class="mb-2">
            <label>Unit Price</label>
            <input name="UnitPrice" type="number" step="0.01" class="form-control" required />
        </div>
    </form>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
    <button type="button" class="btn btn-primary" id="saveSizeBtn">Save</button>
</div>

<script>
    $(document).ready(function() {
        // Initialize Measuring Unit Type Combobox
        $("#modalMeasuringUnitTypeId").kendoComboBox({
            dataSource: {
                transport: {
                    read: {
                        url: "/Product/GetMeasuringUnitTypes",
                        dataType: "json"
                    }
                }
            },
            dataTextField: "text",
            dataValueField: "value",
            placeholder: "-- Select MU Type --",
            filter: "contains",
            suggest: true,
            minLength: 1,
            change: function() {
                var mutId = this.value();
                console.log("MU Type changed to:", mutId);
                
                // Clear and disable Measuring Unit dropdown
                var measuringUnitCombo = $("#modalMeasuringUnitId").data("kendoComboBox");
                if (measuringUnitCombo) {
                    measuringUnitCombo.value("");
                    measuringUnitCombo.enable(false);
                }
                
                if (mutId && mutId !== "") {
                    // Load measuring units based on selected MU Type
                    loadMeasuringUnits(mutId);
                }
            }
        });
        
        // Initialize Measuring Unit Combobox (initially disabled)
        $("#modalMeasuringUnitId").kendoComboBox({
            dataSource: {
                data: []
            },
            dataTextField: "text",
            dataValueField: "value",
            placeholder: "-- Select Measuring Unit --",
            filter: "contains",
            suggest: true,
            minLength: 1,
            enabled: false,
            readonly: false
        });
        
        // Function to load measuring units based on MU Type
        window.loadMeasuringUnits = function(mutId) {
            console.log("Loading measuring units for MU Type ID:", mutId);
            
            // Validate input
            if (!mutId || mutId === "" || mutId === "0") {
                console.log("Invalid MU Type ID provided");
                return;
            }
            
            // Clear and disable the combobox first
            var measuringUnitCombo = $("#modalMeasuringUnitId").data("kendoComboBox");
            if (measuringUnitCombo) {
                measuringUnitCombo.value("");
                measuringUnitCombo.enable(false);
                measuringUnitCombo.dataSource.data([]);
            }
            
            $.ajax({
                url: "/Product/GetMeasuringUnitsByType",
                type: "GET",
                data: { measuringUnitTypeId: mutId },
                success: function(data) {
                    console.log("AJAX Success - Measuring units data:", data);
                    if (data && data.length > 0) {
                        // Update the existing combobox with new data
                        if (measuringUnitCombo) {
                            measuringUnitCombo.dataSource.data(data);
                            measuringUnitCombo.enable(true);
                            measuringUnitCombo.readonly(false);
                            measuringUnitCombo.refresh();
                        } else {
                            // Recreate if it doesn't exist
                            $("#modalMeasuringUnitId").kendoComboBox({
                                dataSource: {
                                    data: data
                                },
                                dataTextField: "text",
                                dataValueField: "value",
                                placeholder: "-- Select Measuring Unit --",
                                filter: "contains",
                                suggest: true,
                                minLength: 1,
                                enabled: true,
                                readonly: false
                            });
                        }
                        
                        console.log("Measuring units loaded successfully. Count:", data.length);
                    } else {
                        console.log("No measuring units found for this MU Type");
                        if (measuringUnitCombo) {
                            measuringUnitCombo.enable(false);
                            measuringUnitCombo.readonly(true);
                        }
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error loading measuring units:", error);
                    console.error("Response:", xhr.responseText);
                    
                    // Show error message to user
                    alert("Failed to load measuring units. Please try again.\nError: " + error);
                    
                    // Disable the combobox on error
                    if (measuringUnitCombo) {
                        measuringUnitCombo.enable(false);
                        measuringUnitCombo.readonly(true);
                    }
                }
            });
        };
        
        // Auto-load measuring units if a MU Type is pre-selected
        setTimeout(function() {
            var preSelectedMutId = $("#preSelectedMutId").val() || $("#modalMeasuringUnitTypeId").val();
            console.log("=== AUTO-LOADING MEASURING UNITS ===");
            console.log("Pre-selected MU Type ID from hidden input:", $("#preSelectedMutId").val());
            console.log("Pre-selected MU Type ID from combobox:", $("#modalMeasuringUnitTypeId").val());
            console.log("Final pre-selected MU Type ID:", preSelectedMutId);
            
            if (preSelectedMutId && preSelectedMutId !== "" && preSelectedMutId !== "0") {
                console.log("Pre-selected MU Type ID found:", preSelectedMutId);
                var mutCombo = $("#modalMeasuringUnitTypeId").data("kendoComboBox");
                if (mutCombo) {
                    console.log("MU Type combobox found, setting value and loading measuring units");
                    mutCombo.value(preSelectedMutId);
                    window.loadMeasuringUnits(preSelectedMutId);
                } else {
                    console.log("MU Type combobox not ready, retrying in 200ms");
                    // If combobox not ready, try again
                    setTimeout(function() {
                        var mutCombo = $("#modalMeasuringUnitTypeId").data("kendoComboBox");
                        if (mutCombo) {
                            console.log("MU Type combobox ready on retry, setting value and loading measuring units");
                            mutCombo.value(preSelectedMutId);
                            window.loadMeasuringUnits(preSelectedMutId);
                        } else {
                            console.log("MU Type combobox still not ready after retry");
                        }
                    }, 200);
                }
            } else {
                console.log("No pre-selected MU Type ID found");
            }
        }, 300);
    });
</script>
