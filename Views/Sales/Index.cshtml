@model IMS.Models.SalesViewModel
@using System.Linq

@{
    ViewData["Title"] = "Sales Management";
}

<style>
    /* Enhanced Filter Section Styles */
    .card-header.bg-gradient {
        border: none;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .card.shadow-sm {
        border: none;
        border-radius: 12px;
        overflow: hidden;
    }
    
    .card-body.bg-light {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%) !important;
        border-radius: 0 0 12px 12px;
    }
    
    .form-label {
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }
    
    .form-control {
        border-radius: 8px;
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }
    
    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        transform: translateY(-1px);
    }
    
    .btn {
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
    }
    
    .btn-outline-secondary {
        border-color: #6c757d;
        color: #6c757d;
    }
    
    .btn-outline-secondary:hover {
        background: #6c757d;
        border-color: #6c757d;
    }
    
    .btn-outline-warning {
        border-color: #ffc107;
        color: #ffc107;
    }
    
    .btn-outline-warning:hover {
        background: #ffc107;
        border-color: #ffc107;
        color: #000;
    }
    
    /* Collapse Animation */
    .collapse {
        transition: all 0.3s ease;
    }
    
    /* Icon Colors */
    .text-primary {
        color: #667eea !important;
    }
    
    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .d-flex.gap-2 {
            flex-direction: column;
            gap: 0.5rem !important;
        }
        
        .btn {
            width: 100%;
        }
    }
</style>

@* <div class="container"> *@
    <div class="card shadow-sm">
        <!-- Header -->
        <div class="card-header bg-success text-white" >
            <h2 class="mb-0" style="text-align:center"> Sales Management</h2>
        </div>

        <div class="card-body">
            <!-- Toolbar -->
            
            <!-- Advanced Filters -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-gradient" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                    <div class="d-flex align-items-center justify-content-between">
                        <h6 class="mb-0 text-white">
                            <i class="fa-solid fa-filter me-2"></i>Advanced Filters
                        </h6>
                        <button class="btn btn-sm btn-outline-light" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="true" aria-controls="filterCollapse">
                            <i class="fa-solid fa-chevron-up"></i>
                        </button>
                    </div>
                </div>
                <div class="collapse show" id="filterCollapse">
                    <div class="card-body bg-light">
                        <form asp-action="Index" method="get">
                            <!-- Filter Row 1 -->
                            <div class="row g-3 mb-3">
                                <div class="col-lg-3 col-md-6">
                                    <label class="form-label fw-semibold text-dark">
                                        <i class="fa-solid fa-user me-1 text-primary"></i>Customer
                                    </label>
                                    <input name="customerId" id="customerFilterSelect" style="width: 100%;" />
                                </div>
                                <div class="col-lg-2 col-md-6">
                                    <label class="form-label fw-semibold text-dark">
                                        <i class="fa-solid fa-receipt me-1 text-primary"></i>Bill Number
                                    </label>
                                    <input type="number" name="billNumber" class="form-control" value="@Context.Request.Query["billNumber"]" placeholder="Enter Bill #" />
                                </div>
                                <div class="col-lg-2 col-md-6">
                                    <label class="form-label fw-semibold text-dark">
                                        <i class="fa-solid fa-calendar me-1 text-primary"></i>From Date
                                    </label>
                                    <input type="date" name="saleFrom" id="saleFrom" class="form-control" value="@(Context.Request.Query["saleFrom"].FirstOrDefault() ?? DateTime.Now.ToString("yyyy-MM-dd"))" />
                                </div>
                                <div class="col-lg-2 col-md-6">
                                    <label class="form-label fw-semibold text-dark">
                                        <i class="fa-solid fa-calendar me-1 text-primary"></i>To Date
                                    </label>
                                    <input type="date" name="saleDateTo" id="saleDateTo" class="form-control" value="@(Context.Request.Query["saleDateTo"].FirstOrDefault() ?? DateTime.Now.ToString("yyyy-MM-dd"))" />
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <label class="form-label fw-semibold text-dark">
                                        <i class="fa-solid fa-align-left me-1 text-primary"></i>Description
                                    </label>
                                    <input type="text" name="description" class="form-control" value="@Context.Request.Query["description"]" placeholder="Enter description..." />
                                </div>
                            </div>
                            
                            <!-- Action Buttons Row -->
                            <div class="row">
                                <div class="col-12">
                                    <div class="d-flex justify-content-center gap-2">
                                        <button type="submit" class="btn btn-primary px-4 py-2">
                                            <i class="fa-solid fa-search me-2"></i>Search Sales
                                        </button>
                                        <a asp-action="Index" class="btn btn-outline-secondary px-4 py-2" title="Reset Filters">
                                            <i class="fa-solid fa-refresh me-2"></i>Reset
                                        </a>
                                        <button type="button" class="btn btn-outline-warning px-4 py-2" onclick="clearAllFilters()" title="Clear All Fields">
                                            <i class="fa-solid fa-times me-2"></i>Clear All
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Table -->
            <div class="table-responsive">
            <table class="table table-striped table-bordered custom-table">
                    <thead class="table-dark">
                        <tr>
                            <th>Bill #</th>
                            <th>Sales Date</th>
                            <th>Customer</th>
                            <th class="text-end">Total Amount</th>
                            <th class="text-end">Discount</th>
                            <th class="text-end">Received</th>
                            <th class="text-end">Total Dues</th>
                            <th>Description</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.SalesList != null && Model.SalesList.Any())
                        {
                            foreach (var sale in Model.SalesList)
                            {
                                <tr>
                                    <td>
                                        <span class="badge bg-primary">#@sale.BillNumber</span>
                                    </td>
                                    <td>@sale.SaleDate.ToString("dd-MMM-yyyy")</td>
                                    <td>
                                        <strong>@sale.CustomerName</strong>
                                    </td>
                                    <td class="text-end">
                                        <span class="fw-bold text-success">@sale.TotalAmount.ToString("C")</span>
                                    </td>
                                    <td class="text-end">
                                        @if (sale.DiscountAmount > 0)
                                        {
                                            <span class="text-warning">@sale.DiscountAmount.ToString("C")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td class="text-end">
                                        <span class="text-success">@sale.TotalReceivedAmount.ToString("C")</span>
                                    </td>
                                    <td class="text-end">
                                        @if (sale.TotalDueAmount > 0)
                                        {
                                            <span class="text-danger fw-bold">@sale.TotalDueAmount.ToString("C")</span>
                                        }
                                        else
                                        {
                                            <span class="text-success">Paid</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(sale.SaleDescription))
                                        {
                                            <span title="@sale.SaleDescription" class="text-truncate d-inline-block" style="max-width: 200px;">
                                                @(sale.SaleDescription.Length > 30 ? sale.SaleDescription.Substring(0, 30) + "..." : sale.SaleDescription)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                            </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@sale.SaleId" class="btn btn-sm btn-outline-info" title="View Details">
                                                <i class="fa-solid fa-eye"></i>
                                            </a>
                                            <a asp-action="EditSale" asp-route-id="@sale.SaleId" class="btn btn-sm btn-outline-warning" title="Edit Sale">
                                                <i class="fa-solid fa-edit"></i>
                                            </a>
                                            <a asp-action="PrintReceipt" asp-route-id="@sale.SaleId" class="btn btn-sm btn-outline-success" title="Print Receipt" target="_blank">
                                                <i class="fa-solid fa-receipt"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@sale.SaleId" class="btn btn-sm btn-outline-danger" title="Delete Sale">
                                                <i class="fa-solid fa-trash"></i>
                                            </a>
                                        </div>
                            </td>
                        </tr>
                                                }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center py-4">
                                    <div class="text-muted">
                                        <i class="fa-solid fa-inbox fa-3x mb-3"></i>
                                        <p class="mb-0">No sales found.</p>
                                        <small>Start by creating your first sale using the "Add New Sale" button above.</small>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center mt-4">
                <div class="d-flex align-items-center">
                    <span class="text-muted me-3">
                        <i class="fa-solid fa-info-circle me-1"></i>
                        Total: <strong>@Model.TotalCount</strong> sales | Showing <strong>@Model.PageSize</strong> per page
                    </span>
                    <div class="d-flex align-items-center">
                        <label for="pageSize" class="form-label me-2 text-muted mb-0">Items per page:</label>
                        <select id="pageSize" class="form-select form-select-sm" style="width: auto;" onchange="changePageSize(this)">
                        <option value="5" selected="@(Model.PageSize == 5)">5</option>
                        <option value="10" selected="@(Model.PageSize == 10)">10</option>
                        <option value="25" selected="@(Model.PageSize == 25)">25</option>
                            <option value="50" selected="@(Model.PageSize == 50)">50</option>
                    </select>
                    </div>
                </div>
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="User pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="1"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-customerId="@Context.Request.Query["customerId"]"
                               asp-route-billNumber="@Context.Request.Query["billNumber"]"
                               asp-route-saleFrom="@Context.Request.Query["saleFrom"]"
                               asp-route-saleDateTo="@Context.Request.Query["saleDateTo"]"
                               asp-route-description="@Context.Request.Query["description"]">First</a>
                        </li>
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-customerId="@Context.Request.Query["customerId"]"
                               asp-route-billNumber="@Context.Request.Query["billNumber"]"
                               asp-route-saleFrom="@Context.Request.Query["saleFrom"]"
                               asp-route-saleDateTo="@Context.Request.Query["saleDateTo"]"
                               asp-route-description="@Context.Request.Query["description"]">Previous</a>
                        </li>
                        @{
                            int startPage = Math.Max(1, Model.CurrentPage - 1);
                            int endPage = Math.Min(Model.TotalPages, startPage + 2);
                            if (endPage - startPage < 2)
                            {
                                startPage = Math.Max(1, endPage - 2);
                            }

                        }
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" 
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-customerId="@Context.Request.Query["customerId"]"
                                   asp-route-billNumber="@Context.Request.Query["billNumber"]"
                                   asp-route-saleFrom="@Context.Request.Query["saleFrom"]"
                                   asp-route-saleDateTo="@Context.Request.Query["saleDateTo"]"
                                   asp-route-description="@Context.Request.Query["description"]">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-customerId="@Context.Request.Query["customerId"]"
                               asp-route-billNumber="@Context.Request.Query["billNumber"]"
                               asp-route-saleFrom="@Context.Request.Query["saleFrom"]"
                               asp-route-saleDateTo="@Context.Request.Query["saleDateTo"]"
                               asp-route-description="@Context.Request.Query["description"]">Next</a>
                        </li>
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-customerId="@Context.Request.Query["customerId"]"
                               asp-route-billNumber="@Context.Request.Query["billNumber"]"
                               asp-route-saleFrom="@Context.Request.Query["saleFrom"]"
                               asp-route-saleDateTo="@Context.Request.Query["saleDateTo"]"
                               asp-route-description="@Context.Request.Query["description"]">Last</a>
                        </li>
                    </ul>
                </nav>
            }
            </div>
        </div>
    </div>
@* </div> *@

@section Scripts {
    <script>
        // Initialize Kendo UI combobox for customer filter
        $(document).ready(function() {
            // Set default dates to today if not already set
            const today = new Date().toISOString().split('T')[0];
            const saleFromInput = document.getElementById('saleFrom');
            const saleDateToInput = document.getElementById('saleDateTo');
            
            if (saleFromInput && !saleFromInput.value) {
                saleFromInput.value = today;
            }
            if (saleDateToInput && !saleDateToInput.value) {
                saleDateToInput.value = today;
            }

            // Prepare customer data for Kendo combobox
            const customerData = [
                { value: "", text: "All Customers" }
                @if (Model.CustomerList != null)
                {
                    @foreach (var customer in Model.CustomerList)
                    {
                        <text>,</text>
                        <text>{ value: "@customer.CustomerId", text: "@customer.CustomerName" }</text>
                    }
                }
            ];

            // Initialize customer filter combobox
            $("#customerFilterSelect").kendoComboBox({
                dataSource: {
                    data: customerData
                },
                dataTextField: "text",
                dataValueField: "value",
                placeholder: "Select Customer...",
                filter: "contains",
                suggest: true,
                minLength: 1,
                change: function() {
                    console.log("Customer filter changed:", this.value());
                }
            });

            // Set the selected value if there's a query parameter
            const selectedCustomerId = "@Context.Request.Query["customerId"]";
            if (selectedCustomerId) {
                const customerCombo = $("#customerFilterSelect").data("kendoComboBox");
                if (customerCombo) {
                    customerCombo.value(selectedCustomerId);
                }
            }

            // Add event listeners for date inputs to auto-submit form when dates change
            $('#saleFrom, #saleDateTo').on('change', function() {
                // Auto-submit form when date changes
                setTimeout(function() {
                    $('form').submit();
                }, 100);
            });
        });

        // Function to clear all filters and reset to today's date
        function clearAllFilters() {
            const today = new Date().toISOString().split('T')[0];
            
            // Clear customer filter
            const customerCombo = $("#customerFilterSelect").data("kendoComboBox");
            if (customerCombo) {
                customerCombo.value("");
            }
            
            // Clear other inputs
            document.querySelector('input[name="billNumber"]').value = '';
            document.querySelector('input[name="description"]').value = '';
            
            // Set dates to today
            document.getElementById('saleFrom').value = today;
            document.getElementById('saleDateTo').value = today;
            
            // Submit form to refresh results
            $('form').submit();
        }

        function SearchCustomerChange() {
            debugger;
            const search = document.querySelector('input[name="searchCustomer"]')?.value || '';
            const pageSize = document.getElementById("pageSize").value;
            const customerCombo = $("#customerFilterSelect").data("kendoComboBox");
            const customerId = customerCombo ? customerCombo.value() : '';
            const billNumber = document.querySelector('input[name="billNumber"]')?.value || '';
            const saleFrom = document.querySelector('input[name="saleFrom"]')?.value || '';
            const saleDateTo = document.querySelector('input[name="saleDateTo"]')?.value || '';
            const description = document.querySelector('input[name="description"]')?.value || '';
            
            const params = new URLSearchParams();
            params.set('pageNumber', '1');
            params.set('pageSize', pageSize);
            if (search) params.set('searchCustomer', search);
            if (customerId) params.set('customerId', customerId);
            if (billNumber) params.set('billNumber', billNumber);
            if (saleFrom) params.set('saleFrom', saleFrom);
            if (saleDateTo) params.set('saleDateTo', saleDateTo);
            if (description) params.set('description', description);
            
            window.location.href = '@Url.Action("Index", "Sales")' + '?' + params.toString();
        }

        function changePageSize(select) {
            debugger;
            const search = document.querySelector('input[name="searchCustomer"]')?.value || '';
            const customerCombo = $("#customerFilterSelect").data("kendoComboBox");
            const customerId = customerCombo ? customerCombo.value() : '';
            const billNumber = document.querySelector('input[name="billNumber"]')?.value || '';
            const saleFrom = document.querySelector('input[name="saleFrom"]')?.value || '';
            const saleDateTo = document.querySelector('input[name="saleDateTo"]')?.value || '';
            const description = document.querySelector('input[name="description"]')?.value || '';
            
            const params = new URLSearchParams();
            params.set('pageNumber', '1');
            params.set('pageSize', select.value);
            if (search) params.set('searchCustomer', search);
            if (customerId) params.set('customerId', customerId);
            if (billNumber) params.set('billNumber', billNumber);
            if (saleFrom) params.set('saleFrom', saleFrom);
            if (saleDateTo) params.set('saleDateTo', saleDateTo);
            if (description) params.set('description', description);
            
            window.location.href = '@Url.Action("Index", "Sales")' + '?' + params.toString();
        }

        // Auto-submit search on Enter key
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.querySelector('input[name="searchCustomer"]');
            if (searchInput) {
                searchInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        SearchCustomerChange();
                    }
                });
            }
        });

        // Enhanced Filter Collapse Functionality
        $(document).ready(function() {
            // Handle collapse toggle
            $('#filterCollapse').on('show.bs.collapse', function () {
                $('[data-bs-target="#filterCollapse"] i').removeClass('fa-chevron-down').addClass('fa-chevron-up');
            });
            
            $('#filterCollapse').on('hide.bs.collapse', function () {
                $('[data-bs-target="#filterCollapse"] i').removeClass('fa-chevron-up').addClass('fa-chevron-down');
            });

            // Add smooth focus animations to form controls
            $('.form-control').on('focus', function() {
                $(this).closest('.col-lg-3, .col-lg-2, .col-md-6').addClass('animate__animated animate__pulse');
            }).on('blur', function() {
                $(this).closest('.col-lg-3, .col-lg-2, .col-md-6').removeClass('animate__animated animate__pulse');
            });

            // Add loading state to search button
            $('form').on('submit', function() {
                const submitBtn = $(this).find('button[type="submit"]');
                submitBtn.prop('disabled', true);
                submitBtn.html('<i class="fa-solid fa-spinner fa-spin me-2"></i>Searching...');
            });
        });
    </script>
}
