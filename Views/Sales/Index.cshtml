@model IMS.Models.SalesViewModel
@using System.Linq

@{
    ViewData["Title"] = "Sales Management";
}

@* <div class="container"> *@
    <div class="card shadow-sm">
        <!-- Header -->
        <div class="card-header bg-success text-white" >
            <h2 class="mb-0" style="text-align:center"> Sales Management</h2>
        </div>

        <div class="card-body">
            <!-- Toolbar -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <a asp-action="Create" class="btn btn-success">Add New Sale</a>

                <!-- Search -->
                <form asp-action="Index" asp-controller="Sales" asp-route-searchCustomer="@ViewData["searchCustomer"]" method="get" class="d-flex align-items-center gap-2">
                    <input type="text"
                           name="searchCustomer"
                           value="@Context.Request.Query["searchCustomer"]"
                           class="form-control"
                           placeholder="Enter Customer Name" onchange="SearchCustomerChange()" />
                    <button type="submit" class="btn btn-primary">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                    <button type="submit" class="btn btn-info">
                        Refresh
                    </button>
                </form>

               
            </div>

            <!-- Table -->
            <div class="table-responsive">
                <table class="table table-striped table-bordered custom-table">
                    <thead>
                        <tr>
                            <th>Bill #</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Total Amount</th>
                            <th>Discount</th>
                            <th>Received</th>
                            <th>Due</th>
                            <th>Description</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.SalesList != null && Model.SalesList.Any())
                        {
                            foreach (var sale in Model.SalesList)
                            {
                                <tr>
                                    <td>@sale.BillNumber</td>
                                    <td>@sale.SaleDate.ToString("dd/MM/yyyy")</td>
                                    <td>@sale.CustomerName</td>
                                    <td>@sale.TotalAmount.ToString("C")</td>
                                    <td>@sale.DiscountAmount.ToString("C")</td>
                                    <td>@sale.TotalReceivedAmount.ToString("C")</td>
                                    <td>@sale.TotalDueAmount.ToString("C")</td>
                                    <td title="@sale.SaleDescription">
                                        @(sale.SaleDescription?.Length > 30
                                                                        ? sale.SaleDescription.Substring(0, 30) + "..."
                                                                        : sale.SaleDescription)
                            </td>
                            <td class="table-actions text-nowrap">
                                <a asp-action="Details" asp-route-id="@sale.SaleId" class="btn btn-info btn-sm">
                                    <i class="fa-solid fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@sale.SaleId" class="btn btn-primary btn-sm">
                                    <i class="fa-solid fa-edit"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@sale.SaleId" class="btn btn-danger btn-sm">
                                    <i class="fa-solid fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                                                }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center">No sales found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center mt-3">
                <span class="text-muted">Total: @Model.TotalCount | Showing @Model.PageSize Records per page</span>
                <!-- Page Size -->
                <div>
                    <label for="pageSize" class="form-label me-2 text-muted">Items Per Page :</label>
                    <select id="pageSize" class="form-select form-select-sm d-inline-block w-auto" onchange="changePageSize(this)">
                        <option value="5" selected="@(Model.PageSize == 5)">5</option>
                        <option value="10" selected="@(Model.PageSize == 10)">10</option>
                        <option value="25" selected="@(Model.PageSize == 25)">25</option>
                    </select>
                </div>
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Sales pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="1" asp-route-pageSize="@Model.PageSize" asp-route-searchCustomer="@ViewData["searchCustomer"]">First</a>
                            </li>
                            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchCustomer="@ViewData["searchCustomer"]">Previous</a>
                            </li>
                            @{
                                int startPage = Math.Max(1, Model.CurrentPage - 1);
                                int endPage = Math.Min(Model.TotalPages, startPage + 2);
                                if (endPage - startPage < 2)
                                {
                                    startPage = Math.Max(1, endPage - 2);
                                }
                            }
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-searchCustomer="@ViewData["searchCustomer"]">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchCustomer="@ViewData["searchCustomer"]">Next</a>
                            </li>
                            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages" asp-route-pageSize="@Model.PageSize" asp-route-searchCustomer="@ViewData["searchCustomer"]">Last</a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
@* </div> *@

@section Scripts {
    <script>
        function SearchCustomerChange() {
            const search = document.querySelector('input[name="searchCustomer"]').value;
            const pageSize = document.getElementById("pageSize").value;
            window.location.href = '@Url.Action("Index", "Sales")'
                + '?pageNumber=1&pageSize=' + pageSize
                + (search ? '&searchCustomer=' + encodeURIComponent(search) : '');
        }

        function changePageSize(select) {
            const search = document.querySelector('input[name="searchCustomer"]').value;
            window.location.href = '@Url.Action("Index", "Sales")'
                + '?pageNumber=1&pageSize=' + select.value
                + (search ? '&searchCustomer=' + encodeURIComponent(search) : '');
        }
    </script>
}
