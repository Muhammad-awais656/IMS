@model IMS.Models.CustomerPaymentViewModel
@using System.Linq

@{
    ViewData["Title"] = "Customer Payments";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <!-- Header -->
        <div class="card-header" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border: none;">
            <h2 class="mb-0" style="text-align:center">Customer Payments</h2>
        </div>

        <div class="card-body">
            <!-- Filter Section -->
            <div class="row mb-3">
                <div class="col-md-12">
                    <form asp-action="Index" method="get" class="row g-3">
                        <div class="col-md-3">
                            <label for="customerId" class="form-label">Customer Name:</label>
                            <select name="customerId" id="customerId" class="form-select">
                                <option value="">--Select a value--</option>
                                @foreach (var customer in Model.CustomerList)
                                {
                                    <option value="@customer.CustomerId" selected="@(ViewData["customerId"]?.ToString() == customer.CustomerId.ToString())">
                                        @customer.CustomerName
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="saleId" class="form-label">Bill #:</label>
                            <select name="saleId" id="saleId" class="form-select">
                                <option value="">--Select a value--</option>
                                @foreach (var sale in Model.SalesList)
                                {
                                    <option value="@sale.SaleId" selected="@(ViewData["saleId"]?.ToString() == sale.SaleId.ToString())">
                                        @sale.BillNumber
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="paymentDateFrom" class="form-label">Payment date from:</label>
                            <input type="date" name="paymentDateFrom" id="paymentDateFrom" class="form-control"
                                   value="@ViewData["paymentDateFrom"]" />
                        </div>
                        <div class="col-md-2">
                            <label for="paymentDateTo" class="form-label">Payment date to:</label>
                            <input type="date" name="paymentDateTo" id="paymentDateTo" class="form-control"
                                   value="@ViewData["paymentDateTo"]" />
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary me-2">Filter</button>
                            <a asp-action="Index" class="btn btn-secondary">Reset filters</a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Toolbar -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <a asp-action="Create" class="btn btn-success">Add New Payment</a>

                <!-- Page Size -->
                <div>
                    <label for="pageSize" class="form-label me-2">Items Per Page :</label>
                    <select id="pageSize" class="form-select form-select-sm d-inline-block w-auto" onchange="changePageSize(this)">
                        <option value="5" selected="@(Model.PageSize == 5)">5</option>
                        <option value="10" selected="@(Model.PageSize == 10)">10</option>
                        <option value="25" selected="@(Model.PageSize == 25)">25</option>
                    </select>
                </div>
            </div>

            <!-- Table -->
            <div class="table-responsive">
                <table class="table table-striped table-bordered custom-table">
                    <thead>
                        <tr>
                            <th>Payment id</th>
                            <th>Customer name</th>
                            <th>Bill number</th>
                            <th>Amount</th>
                            <th>Payment date</th>
                            <th>Description</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.PaymentsList != null && Model.PaymentsList.Any())
                        {
                            foreach (var payment in Model.PaymentsList)
                            {
                                <tr>
                                    <td>@payment.PaymentId</td>
                                    <td>@payment.CustomerName</td>
                                    <td>@payment.BillNumber</td>
                                    <td>@payment.PaymentAmount.ToString("N3")</td>
                                    <td>@payment.PaymentDate.ToString("M/d/yyyy h:mm:ss tt")</td>
                                    <td title="@payment.Description">
                                        @(payment.Description?.Length > 30
                                                                        ? payment.Description.Substring(0, 30) + "..."
                                                                        : payment.Description)
                            </td>
                            <td class="table-actions text-nowrap">
                                <a asp-action="Details" asp-route-id="@payment.PaymentId" class="btn btn-info btn-sm">
                                    <i class="fa-solid fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@payment.PaymentId" class="btn btn-primary btn-sm">
                                    <i class="fa-solid fa-edit"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@payment.PaymentId" class="btn btn-danger btn-sm">
                                    <i class="fa-solid fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                                                }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center">No payments found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-between align-items-center mt-3">
                <span class="text-muted">Total: @Model.TotalCount | Showing @Model.PageSize Records per page</span>
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Payments pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="1" asp-route-pageSize="@Model.PageSize"
                                   asp-route-customerId="@ViewData["customerId"]" asp-route-saleId="@ViewData["saleId"]"
                                   asp-route-paymentDateFrom="@ViewData["paymentDateFrom"]" asp-route-paymentDateTo="@ViewData["paymentDateTo"]">First</a>
                            </li>
                            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize"
                                   asp-route-customerId="@ViewData["customerId"]" asp-route-saleId="@ViewData["saleId"]"
                                   asp-route-paymentDateFrom="@ViewData["paymentDateFrom"]" asp-route-paymentDateTo="@ViewData["paymentDateTo"]">Previous</a>
                            </li>
                            @{
                                int startPage = Math.Max(1, Model.CurrentPage - 1);
                                int endPage = Math.Min(Model.TotalPages, startPage + 2);
                                if (endPage - startPage < 2)
                                {
                                    startPage = Math.Max(1, endPage - 2);
                                }
                            }
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize"
                                       asp-route-customerId="@ViewData["customerId"]" asp-route-saleId="@ViewData["saleId"]"
                                       asp-route-paymentDateFrom="@ViewData["paymentDateFrom"]" asp-route-paymentDateTo="@ViewData["paymentDateTo"]">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize"
                                   asp-route-customerId="@ViewData["customerId"]" asp-route-saleId="@ViewData["saleId"]"
                                   asp-route-paymentDateFrom="@ViewData["paymentDateFrom"]" asp-route-paymentDateTo="@ViewData["paymentDateTo"]">Next</a>
                            </li>
                            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages" asp-route-pageSize="@Model.PageSize"
                                   asp-route-customerId="@ViewData["customerId"]" asp-route-saleId="@ViewData["saleId"]"
                                   asp-route-paymentDateFrom="@ViewData["paymentDateFrom"]" asp-route-paymentDateTo="@ViewData["paymentDateTo"]">Last</a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function changePageSize(select) {
            const customerId = document.getElementById("customerId").value;
            const saleId = document.getElementById("saleId").value;
            const paymentDateFrom = document.getElementById("paymentDateFrom").value;
            const paymentDateTo = document.getElementById("paymentDateTo").value;

            window.location.href = '@Url.Action("Index", "CustomerPayment")'
                + '?pageNumber=1&pageSize=' + select.value
                + (customerId ? '&customerId=' + customerId : '')
                + (saleId ? '&saleId=' + saleId : '')
                + (paymentDateFrom ? '&paymentDateFrom=' + paymentDateFrom : '')
                + (paymentDateTo ? '&paymentDateTo=' + paymentDateTo : '');
        }
    </script>
}
