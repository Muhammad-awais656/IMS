@model IMS.Models.ExpenseViewModel;

@* <div class="container mt-4"> *@
<div class="card shadow-sm">
    <div class="card-header bg-success text-white">
        <h2 class="mb-0" style="text-align:center">Expense Management</h2>
    </div>
    <div class="card-body">
        <div class="justify-content-md-start align-items-md-start mb-3">
           
            <div>
                <form style="border:ridge; background: aliceblue;"
                      asp-action="Index"
                      asp-controller="Expense"

                      asp-route-expenseDetail="@ViewData["expenseDetail"]"
                      asp-route-searchpFrom="@ViewData["searchpFrom"]"
                      asp-route-searchpTo="@ViewData["searchpTo"]"
                      asp-route-FromDate="@ViewData["FromDate"]"
                      asp-route-ToDate="@ViewData["ToDate"]"
                      asp-route-expenseFilters.ExpenseTypeId="@ViewData["expenseFilters.ExpenseTypeId"]"
                      method="get"
                      class="d-flex align-items-center gap-2">

                    <div class="row row-cols-1 row-cols-md-2 row-cols-md-4 g-4 mt-2">

                        <div class="col-md-3">
                            <label>Expense Type :</label>
                            
                            @Html.DropDownList("expenseFilters.ExpenseTypeId", ViewBag.EnabledExpenses as IEnumerable<SelectListItem>, "<-- Select Expense Type -->", new { @class = "form-control", @id = "expenseFilters.ExpenseTypeId" })
                        </div>

                        <div class="col">
                            <label for="expenseDetail" class="form-label">Detail:</label>
                            <input type="text"
                                   id="expenseDetail"
                                   name="expenseDetail"
                                   value="@Context.Request.Query["expenseDetail"]"
                                   class="form-control"
                                   placeholder="Enter Expense Detail"
                                   onchange="SearchNameChange()" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Amount From :</label>
                            <input type="number"
                                   name="searchpFrom"
                                   value="@Context.Request.Query["searchpFrom"]"
                                   class="form-control"
                                   placeholder="Enter Amount From" onchange="SearchNameChange" />

                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Amount To :</label>
                            <input type="number"
                                   id="searchpTo"
                                   name="searchpTo"
                                   value="@Context.Request.Query["searchpTo"]"
                                   class="form-control"
                                   placeholder="Enter Amount To" onchange="SearchNameChange" />

                        </div>
                        <div class="col-md-3">
                            <label>Expense Date From :</label>

                            <input type="date" name="FromDate"
                                   value="@(string.IsNullOrEmpty(Context.Request.Query["FromDate"])
                                                            ? ""
                                                              : Context.Request.Query["FromDate"].ToString())"
                                   class="form-control" />
                        </div>
                        <div class="col-md-3">
                            <label>Expense Date From To :</label>

                            <input type="date" name="ToDate"
                                   value="@(string.IsNullOrEmpty(Context.Request.Query["ToDate"])
                                              ? ""
                                              : Context.Request.Query["ToDate"].ToString())"
                                   class="form-control" />
                        </div>
                        <div class="col">
                            <button type="submit" class="btn btn-primary">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </button>
                            <button type="submit" class="btn btn-info">
                                Refresh
                            </button>

                        </div>
                        <div>
                            <a asp-action="Create" asp-controller="Expense" class="btn btn-success" style="margin:0">Create </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-bordered custom-table">
                <thead>
                    <tr>
                        <th>Expense Id</th>
                        <th>Expense Type</th>
                       
                        <th>Expense detail</th>
                        <th>Expense Amount</th>
                        <th>Expense date</th>

                        <th>Actions</th>


                    </tr>
                </thead>
                <tbody>
                    @if (Model.ExpenseList.Any())
                    {
                        @foreach (var item in Model.ExpenseList)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.ExpenseId)</td>
                                <td>@Html.DisplayFor(modelItem => item.ExpenseType)</td>
                                
                                
                                <td>@Html.DisplayFor(modelitem => item.ExpenseDetail)</td>
                                <td>@Html.DisplayFor(modelitem => item.Amount)</td>
                                <td>@item.ExpenseDate.ToString("d MMMM yyyy")</td>

                                <td class="table-actions">
                                    <a class="btn btn-primary btn-sm" asp-action="Edit" asp-route-id="@item.ExpenseId">Edit</a>
                                    <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.ExpenseId">Delete</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center">No Expenses found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex justify-content-between align-items-center mt-3">
            <span class="text-muted">Total Items : @Model.TotalCount | Showing @Model.PageSize Items per page</span>
            <div class="end-0">
                <label for="pageSize" class="form-label me-2 text-muted">Items Per Page :</label>
                <select id="pageSize" class="form-select form-select-sm d-inline-block w-auto" onchange="changePageSize(this)">
                    <option value="5" selected="@(Model.PageSize == 5)">5</option>
                    <option value="10" selected="@(Model.PageSize == 10)">10</option>
                    <option value="25" selected="@(Model.PageSize == 25)">25</option>
                </select>
            </div>
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="User pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="1"
                               asp-route-pageSize="@Model.PageSize">First</a>
                        </li>
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
                        </li>
                        @{
                            int startPage = Math.Max(1, Model.CurrentPage - 1);
                            int endPage = Math.Min(Model.TotalPages, startPage + 2);
                            if (endPage - startPage < 2)
                            {
                                startPage = Math.Max(1, endPage - 2);
                            }

                        }
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
                        </li>
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages" asp-route-pageSize="@Model.PageSize">Last</a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
    @*  </div> *@
</div>

@section Scripts {
    <script>


        function SearchNameChange(){
            debugger;

            const search = document.querySelector('input[name="searchUsername"]').value;
            window.location.href = '@Url.Action("Index", "Expense")'
                + '?pageNumber=1&pageSize=' + select.value
                + (search ? '&searchUsername=' + encodeURIComponent(search) : '');
        }


           function changePageSize(select) {
               debugger;
            // const search = document.querySelector('input[name="searchUsername"]').value;

            window.location.href = '@Url.Action("Index", "Expense")'
                + '?pageNumber=1&pageSize=' + select.value
        }


    </script>
}
