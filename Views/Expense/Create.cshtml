@using IMS.DAL.PrimaryDBContext
@model Expense;

    <div class="card shadow-sm">
        <div class="card-body">
        <form asp-action="Create" asp-route-FromDate="@ViewData["FromDate"]">
            
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">Create Expene </h2>
                </div>
                <div class="card-body">
                    @* <div class="row row-cols-1 row-cols-md-2 row-cols-md-4 g-4 mt-2"> *@
                    <div class="row row-cols-1">
                    <div class="col">
                        <label asp-for="ExpenseTypeIdFk" class="form-label"> Expense Type :</label>
                        <input id="ExpenseTypeIdFk" name="ExpenseTypeIdFk" style="width: 100%;" />
                        @Html.ValidationMessageFor(m => m.ExpenseTypeIdFk, "", new { @class = "text-danger" })
                    </div>
                  
                        <div class="col">
                            <label asp-for="ExpenseDetail" class="form-label"> Expense Detail:</label>
                            <input asp-for="ExpenseDetail" class="form-control" />
                            <span asp-validation-for="ExpenseDetail" class="text-danger"></span>
                        </div>
                        <div class="col">
                            <label asp-for="Amount" class="form-label">Expense Amount:</label>
                            <input asp-for="Amount" class="form-control" />
                            <span asp-validation-for="Amount" class="text-danger"></span>
                        </div>
                        <div class="col">
                            <label>Expense Date</label>
                            
                            <input id="fromDate" type="date" name="FromDate"
                                   value="@(string.IsNullOrEmpty(Context.Request.Query["FromDate"])
                                        ? DateTime.Now.ToString("yyyy-MM-dd")
                                        : Context.Request.Query["FromDate"].ToString())"
                                   class="form-control" />
                        </div>
                        
                    </div>
                    <div class="mb-3" style="padding:inherit">
                        <button type="submit" class="btn btn-success">Create</button>
                        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    </div>
                    </div>
            </form>
        </div>
    </div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            // Check if Kendo UI is loaded
            if (typeof kendo === 'undefined') {
                console.error('Kendo UI is not loaded. Please check script references.');
                return;
            }

            // Initialize Kendo UI ComboBox for expense types
            $("#ExpenseTypeIdFk").kendoComboBox({
                dataSource: {
                    transport: {
                        read: {
                            url: "/Expense/GetExpenseTypes",
                            dataType: "json"
                        }
                    }
                },
                dataTextField: "text",
                dataValueField: "value",
                placeholder: "-- Select Expense Type --",
                filter: "contains",
                suggest: true,
                minLength: 1
            });

            // Set the max attribute of the date input to today's date
            var today = new Date().toISOString().split('T')[0];
            $('#fromDate').attr('max', today);
        });
    </script>
}
