@model IMS.Models.VendorPaymentViewModel
@{
    ViewBag.Title = "Vendor Payments";
}

<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h2 class="mb-0" style="text-align:center">Vendor Payments Management</h2>
    </div>
    <div class="card-body">
        <!-- Quick Search -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h5 class="mb-0">Vendor Payments</h5>
            </div>
            <div class="d-flex align-items-center gap-2">
                <form asp-action="Index" method="get" class="d-flex align-items-center gap-2">
                    <input type="text"
                           name="description"
                           value="@ViewData["description"]"
                           class="form-control"
                           placeholder="Search by description..." 
                           style="width: 200px;" />
                    <button type="submit" class="btn btn-primary">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fa-solid fa-refresh"></i>
                    </a>
                </form>
            </div>
        </div>

        <!-- Advanced Filters -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="fa-solid fa-filter me-2"></i>Advanced Filters
                    <button class="btn btn-sm btn-outline-primary float-end" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
                        <i class="fa-solid fa-chevron-down"></i>
                    </button>
                </h6>
            </div>
            <div class="collapse" id="filterCollapse">
                <div class="card-body">
                    <form asp-action="Index" method="get" class="row g-3">
                        <!-- First Row -->
                        <div class="col-md-3">
                            <label for="vendorId" class="form-label">Vendor:</label>
                            <select name="vendorId" id="vendorId" class="form-select" onchange="loadBillNumbers()">
                                <option value="">All Vendors</option>
                                @foreach (var vendor in Model.VendorList)
                                {
                                    <option value="@vendor.SupplierId" selected="@(ViewData["vendorId"]?.ToString() == vendor.SupplierId.ToString())">
                                        @vendor.SupplierName
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="billNumber" class="form-label">Bill Number:</label>
                            <select name="billNumber" id="billNumber" class="form-select">
                                <option value="">All Bills</option>
                                @if (ViewBag.BillNumbers != null)
                                {
                                    @foreach (var bill in ViewBag.BillNumbers)
                                    {
                                        <option value="@bill.BillNumber" selected="@(ViewData["billNumber"]?.ToString() == bill.BillNumber.ToString())">
                                            @bill.BillNumber (@bill.TotalDueAmount.ToString("N2"))
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label for="billDateFrom" class="form-label">From Date:</label>
                            <input type="date" name="billDateFrom" id="billDateFrom" class="form-control" value="@ViewData["billDateFrom"]" />
                        </div>
                        <div class="col-md-2">
                            <label for="billDateTo" class="form-label">To Date:</label>
                            <input type="date" name="billDateTo" id="billDateTo" class="form-control" value="@ViewData["billDateTo"]" />
                        </div>
                        <div class="col-md-2">
                            <label for="description" class="form-label">Description:</label>
                            <input type="text" name="description" id="description" class="form-control" value="@ViewData["description"]" placeholder="Description" />
                        </div>
                        <div class="col-md-1 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fa-solid fa-search"></i>
                            </button>
                        </div>
                        
                        <div class="col-md-1 d-flex align-items-end">
                            <button type="button" class="btn btn-outline-secondary w-100" onclick="resetFilters()">
                                <i class="fa-solid fa-undo"></i> Reset
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Data Table Section -->
        <div class="card">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>Bill id</th>
                                <th>Vendor</th>
                                <th>Bill #</th>
                                <th>Bill date</th>
                                <th>Total amount</th>
                                <th>Discount amount</th>
                                <th>Paid amount</th>
                                <th>Total payable amount</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.BillsList.Any())
                            {
                                @foreach (var bill in Model.BillsList)
                                {
                                    <tr>
                                        <td>@bill.BillId</td>
                                        <td>@bill.VendorName</td>
                                        <td>@bill.BillNumber</td>
                                        <td>@bill.BillDate.ToString("dd/MM/yyyy")</td>
                                        <td>@bill.TotalAmount.ToString("N3")</td>
                                        <td>@bill.DiscountAmount.ToString("N3")</td>
                                        <td>@bill.PaidAmount.ToString("N3")</td>
                                        <td>@bill.TotalPayableAmount.ToString("N3")</td>
                                        <td>@bill.Description</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="9" class="text-center bg-light" style="height: 200px; vertical-align: middle;">
                                        <div class="text-muted">No bills found.</div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Summary and Action Buttons Section -->
        <div class="row mt-3">
            <!-- Summary Totals (Left Side) -->
            <div class="col-md-8">
                <div class="card bg-light">
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-3">
                                <div class="border-end">
                                    <strong>Total amount: @Model.TotalAmount.ToString("N3")</strong>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="border-end">
                                    <strong>Total discount amount: @Model.TotalDiscountAmount.ToString("N3")</strong>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="border-end">
                                    <strong>Total paid amount: @Model.TotalPaidAmount.ToString("N3")</strong>
                                </div>
                            </div>
                            <div class="col-3">
                                <strong>Total Payable amount: @Model.TotalPayableAmount.ToString("N3")</strong>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Action Buttons (Right Side) -->
            <div class="col-md-4">
                <div class="d-flex gap-2 justify-content-end">
                    <button type="button" class="btn btn-info" onclick="printPreview()">
                        <i class="fa-solid fa-print"></i> Print preview
                    </button>
                    <button type="button" class="btn btn-success" onclick="refreshData()">
                        <i class="fa-solid fa-refresh"></i> Refresh
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="closeWindow()">
                        <i class="fa-solid fa-times"></i> Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function resetFilters() {
            // Reset all filter inputs
            document.getElementById('vendorId').value = '';
            document.getElementById('billNumber').value = '';
            document.getElementById('billDateFrom').value = '';
            document.getElementById('billDateTo').value = '';
            document.getElementById('description').value = '';
            
            // Clear bill numbers dropdown
            const billNumberSelect = document.getElementById('billNumber');
            billNumberSelect.innerHTML = '<option value="">All Bills</option>';
            
            // Submit the form to reload with empty filters
            const form = document.querySelector('form[method="get"]');
            if (form) {
                form.submit();
            }
        }

        function loadBillNumbers() {
            const vendorId = document.getElementById('vendorId').value;
            const billNumberSelect = document.getElementById('billNumber');
            
            // Clear existing options except the first one
            billNumberSelect.innerHTML = '<option value="">All Bills</option>';
            
            if (vendorId) {
                // Show loading state
                billNumberSelect.innerHTML = '<option value="">Loading bills...</option>';
                
                // Make AJAX call to get bill numbers
                fetch(`/VendorPayments/GetBillNumbers?supplierId=${vendorId}`)
                    .then(response => response.json())
                    .then(data => {
                        billNumberSelect.innerHTML = '<option value="">All Bills</option>';
                        data.forEach(bill => {
                            const option = document.createElement('option');
                            option.value = bill.billNumber;
                            option.textContent = `${bill.billNumber} (${bill.totalDueAmount})`;
                            billNumberSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error loading bill numbers:', error);
                        billNumberSelect.innerHTML = '<option value="">Error loading bills</option>';
                    });
            }
        }

        function printPreview() {
            // Implement print preview functionality
            window.print();
        }

        function refreshData() {
            // Reload the current page with current filters
            window.location.reload();
        }

        function closeWindow() {
            // Close the current window/tab
            window.close();
        }

        // Set default date range if not provided
        document.addEventListener('DOMContentLoaded', function() {
            const billDateFrom = document.getElementById('billDateFrom');
            const billDateTo = document.getElementById('billDateTo');
            
            if (!billDateFrom.value) {
                const today = new Date();
                const oneMonthAgo = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());
                billDateFrom.value = oneMonthAgo.toISOString().split('T')[0];
            }
            
            if (!billDateTo.value) {
                const today = new Date();
                billDateTo.value = today.toISOString().split('T')[0];
            }

            // Handle collapse toggle icon
            const collapseElement = document.getElementById('filterCollapse');
            const toggleButton = document.querySelector('[data-bs-target="#filterCollapse"]');
            const toggleIcon = toggleButton.querySelector('i');

            collapseElement.addEventListener('show.bs.collapse', function () {
                toggleIcon.classList.remove('fa-chevron-down');
                toggleIcon.classList.add('fa-chevron-up');
            });

            collapseElement.addEventListener('hide.bs.collapse', function () {
                toggleIcon.classList.remove('fa-chevron-up');
                toggleIcon.classList.add('fa-chevron-down');
            });
        });
    </script>
}